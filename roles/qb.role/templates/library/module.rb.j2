#!/usr/bin/env ruby
# WANT_JSON

# init bundler in dev env
if ENV['QB_DEV_ENV']
  ENV.each {|k, v|
    if k.start_with? 'QB_DEV_ENV_'
      ENV[k.sub('QB_DEV_ENV_', '')] = v
    end
  }
  require 'bundler/setup'
end

require 'qb'
require 'nrser'

class {{ role_module_class }} < QB::Ansible::Module
  # define arg names to NRSER::Types::Type instances here and they
  # will be type checked and set as @<name>
  # 
  # example:
  # 
  #     arg :x, NRSER::Types.array(String)
  # 
  # will check that the input json has a key named 'x' and that it's value
  # is an Array of String instances, then set it's value as `@x`.
  # 
  
  # entry point for the module. invoked by {\#run}.
  # 
  # @return [nil | {Symbol => #to_json}]
  #   when returning:
  #   
  #   -   `nil`: module will successfully exit with no additional changes.
  #       
  #   -   `{Symbol => #to_json}`: Hash will be merged over @facts that 
  #       are returned by the module to be set in the Ansible runtime and
  #       the module will exit successfully.
  #       
  def main
    return nil
  end # #main
end # {{ role_module_class }}

{{ role_module_class }}.new.run
