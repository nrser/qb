---
# meta/qb.yml file for qb.role
# 
# qb settings for this role. see README.md for more info.
#

# prefix for role variables
var_prefix: null

# how to get a default for `dir` if it's not provided as the 
default_dir: null

vars:
- name: force
  type: boolean
  description: force operations (overwrite)
  short: f
  save: false

- name: role_name
  type: string
  description: name of the role.
  short: n

- name: defaults
  type: boolean
  description: create a defaults directory.
  short: d

- name: files
  type: boolean
  description: create a files directory.
  short: i

- name: handlers
  type: boolean
  description: create handlers/main.yml
  short: a

- name: meta
  type: boolean
  description: create meta/main.yml
  short: m

- name: tasks
  type: boolean
  description: create tasks/main.yml
  short: t

- name: templates
  type: boolean
  description: create a templates directory.
  short: e

- name: vars
  type: boolean
  description: create vars/main.yml
  short: v

- name: galaxy
  type: boolean
  description: include galaxy info in meta/main.yml
  short: g

- name: readme
  type: boolean
  description: include README.md
  short: r

- name: library
  type: boolean
  description: create library directory.
  short: l

- name: project
  type: boolean
  description: create a project repo for this role
  short: p
  
- name: modules
  description: >-
    create ruby module boilerplate(s) in library using QB::AnsibleModule.
  type: array
  required: false
  # TODO not yet implemented
  implies: library
  examples:
  - |
    produces library/some_module execuable with a module named SomeModule
    
    --modules=some_module

- name: filter_plugins
  description: >-
    Generate `filter_plugins` directory and file boilerplate(s).
  type: array
  examples:
  - |
    Generates a `filter_plugins/filter_plugins.py`
    
    qb qb.role roles/owner.new_role --filter-plugins
    
    

- include: qb.project
  