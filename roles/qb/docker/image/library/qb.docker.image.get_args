#!/usr/bin/env ruby
# WANT_JSON

# init bundler in dev env
if ENV['QB_DEV_ENV']
  ENV.each {|k, v|
    if k.start_with? 'QB_DEV_ENV_'
      ENV[k.sub('QB_DEV_ENV_', '')] = v
    end
  }
  require 'bundler/setup'
end

require 'qb'
require 'nrser'

using NRSER::Types

module QB; end
module QB::Docker; end
module QB::Docker::Image; end

class QB::Docker::Image::GetArgs < QB::Ansible::Module
  
  # Arguments
  # ==========================================================================
  
  arg :x, type: t.non_empty_str?, default: nil
  
  arg :vars, type: t.hash_, default: -> { {} }
  
  arg :vars2, type: t.hash_, default: -> { {} }
  
  # entry point for the module. invoked by {\#run}.
  # 
  # @return [nil | {Symbol => #to_json}]
  #   when returning:
  #   
  #   -   `nil`: module will successfully exit with no additional changes.
  #       
  #   -   `{Symbol => #to_json}`: Hash will be merged over @facts that
  #       are returned by the module to be set in the Ansible runtime and
  #       the module will exit successfully.
  #       
  def main
    logger.info "HERE!",
      vars: vars,
      vars2: vars2
      # args_source: args_source
    
    return nil
  end # #main
end # QbDockerImageGetArgs

QB::Docker::Image::GetArgs.run!
