---
# tasks file for qb.release_yarn

- name: load package.json
  include_vars:
    file: "{{ release_yarn_package_dir }}/package.json"
    name: release_gem_package_json

- name: get current version
  set_fact:
    release_yarn_current_version: "{{ release_gem_package_json.version }}"

- name: create release version
  set_fact:
    release_yarn_release_version: "{{
      release_yarn_current_version | semver_inc(release_yarn_level)
    }}"

- name: >
    increment to version {{ release_yarn_release_version }}
    and create the git tag
  command: "yarn version --new-version={{ release_yarn_release_version }}"
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: >
    git push the v{{ release_yarn_release_version }} tag
  command: "git push origin v{{ release_yarn_release_version }}"
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: >
    npm publish v{{ release_yarn_release_version }}
  command: npm publish
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: create the next -dev version
  set_fact:
    release_yarn_next_version: "{{
      release_yarn_release_version | semver_inc(
        level='prerelease',
        preid='dev'
      )
    }}"

- name: >
    increment to {{ release_yarn_next_version }} version
  command: >
    yarn version
      --new-version={{ release_yarn_next_version }}
      --no-git-tag-version
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: git add package.json
  command: git add package.json
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: >
    git commit next dev version
  command: git commit -m "start {{ release_yarn_next_version }}"
  args:
    chdir: "{{ release_yarn_package_dir }}"

- name: git push next dev version
  command: git push
  args:
    chdir: "{{ release_yarn_package_dir }}"

- debug:
    msg: >
      v{{ release_yarn_release_version }} released.
