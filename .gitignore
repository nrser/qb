# Project
# ============================================================================

/tmp/


# Ignore Files
# ============================================================================

##############################################################################
# BEGIN Global/macOS.gitignore
#
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two 
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
#
# END Global/macOS.gitignore
##############################################################################

##############################################################################
# BEGIN Ruby.gitignore
#
# General Git ignore file for Ruby, including support for:
# 
# -   Bundler
# -   RDoc and Yard
# -   RBEnv and RVM
# -   DotEnv (optional)
# 
# Additional support is available in separate ignore files:
# 
# -   Gem.gitignore (for gem source directories)
# -   Rails.gitignore
# -   RubyMotion.gitignore
# 

/*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# Used by dotenv library to load environment variables.
# .env

## Documentation cache and generated files:
/.yardoc/
/_yardoc/
/doc/site
/rdoc/

## Environment normalization:
.bundle/
/vendor/bundle
/lib/bundler/man/

# for a library or gem, add `Gem.gitignore`

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc
#
# END Ruby.gitignore
##############################################################################

##############################################################################
# BEGIN Gem.gitignore
#
/Gemfile.lock
/.ruby-version
/.ruby-gemset
#
# END Gem.gitignore
##############################################################################

##############################################################################
# BEGIN Python.gitingore
#
# General Git ignore file for Python
# 
# Packaging and distribution patterns have been moved out to
# 
#     //Python/Packaging.gitignore
# 

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
.static_storage/
.media/
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
# We have a `//lib/qb/ansible/env` folder and don't use virtualenv, so disable
# this one:
#env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
#
# END Python.gitingore
##############################################################################

##############################################################################
# BEGIN Node.gitignore
#
# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules
jspm_packages

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history
#
# END Node.gitignore
##############################################################################

##############################################################################
# BEGIN QB.gitingore
#
# generated qb playbooks
.qb-playbook.yml

# ansible retry files
.qb-playbook.retry
#
# END QB.gitingore
##############################################################################
